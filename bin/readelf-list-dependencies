#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [OPTS] ELF-FILES ...
#h:
#h: This program helps listing libraries needed by a program.
#h:
#h:     -r           : Search recursively.
#h:     -d DIRECTORY : Print full paths of files in directory.
##:
readelf_list_dependencies() {
    ## Parse command line tools.
    local OPTIND optopt= directory= recursive=n skipfile= dep=
    while getopts "rd:s:" optopt;do # OPTARG
        case $optopt in
            r)  local recursive=y           ;;
            d)  local directory="${OPTARG}" ;;
            s)  local skipfile="${OPTARG}"  ;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    ## Restart skip file.
    if test ! -n "${skipfile}";then
        local skipfile="/tmp/readelf.lst"
        for dep in "$@";do
            basename ${dep}
        done > "${skipfile}"
    fi
    ## List dependencies.
    LANG=C readelf -W -d "$@"       \
        | sed -n '/Shared/s|.*\[\(.*\)\].*|\1|p' \
        | sort                                   \
        | uniq \
        | while read dep;do
        ## Skip line.
        if grep "${dep}" "${skipfile}" >/dev/null;then
            continue
        fi
        ## If no directory, simply print.
        if test ! -n "${directory}";then
            echo "${dep}"
            continue
        fi
        ## If file exists, print and add to skip.
        echo "${dep}" >> "${skipfile}"
        echo "${directory}/${dep}"
        if test @"${recursive}" = @"y";then
            readelf_list_dependencies \
                -r                    \
                -d "${directory}"     \
                -s "${skipfile}"      \
                "${directory}/${dep}"
        fi
    done
}
if test @"`basename "$0"`" = @"readelf-list-dependencies";then
    if test -n "$1";then
        readelf_list_dependencies "$@"
    else
        sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|`basename $0`|g"
        echo ""
        sed -n 's/^ *#l: \{0,2\}//p' "$0"
    fi
fi
